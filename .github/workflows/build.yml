name: build extension

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Build and Deploy
        env:
          JWT_ISSUER: ${{secrets.JWT_ISSUER}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
        run: |
          npm i
          npm run webpack:build
          npm run deploy
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-signed
          path: ./web-ext-artifacts/*
      - name: Determine tag
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"
      - name: Create Release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: process.env.RELEASE_TAG,
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: process.env.RELEASE_TAG,
            });
            const fs = require('fs').promises;
            for (const name of await fs.readdir('./web-ext-artifacts/')) {
              const path = `./web-ext-artifacts/${name}`;
              const file = await fs.stat(path);
              await github.rest.repos.uploadReleaseAsset({
                repo: context.repo.repo,
                owner: context.repo.owner,
                release_id: release.data.id,
                name: process.env.RELEASE_TAG,
                data: await fs.readFile(path),
                headers: {
                  "Content-Type": "application/x-xpinstall",
                  "Content-Length": file.size
                }
              });
            }
